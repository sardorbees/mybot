import os
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    ContextTypes, ConversationHandler, filters,
)

from db import init_db, save_application
from export import export_to_excel
import asyncio

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

# –°–æ—Å—Ç–æ—è–Ω–∏—è
SITE_TYPE, PACKAGE, PRICE, NAME, PHONE, COMMENT = range(6)

advantages = [
    "üß© –ì–∏–±–∫–∏–π ‚Äî –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –±–µ–∑ –¥–æ–ø–ª–∞—Ç",
    "üõ† –ê–¥–º–∏–Ω ‚Äî –ø—Ä–æ—Å—Ç–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
    "üõ° –ó–∞—â–∏—Ç–∞ ‚Äî –æ—Ç –∞—Ç–∞–∫ –∏ –≤–∏—Ä—É—Å–æ–≤",
    "üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ 24/7",
    "üåê –î–æ–º–µ–Ω –∏ —Ö–æ—Å—Ç–∏–Ω–≥ –±–µ—Å–ø–ª–∞—Ç–Ω–æ (6 –º–µ—Å)",
    "üé® –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –ø–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞"
]

site_types = [
    ["üåê LANDING PAGE", "üìÑ –°–∞–π—Ç-–≤–∏–∑–∏—Ç–∫–∞"],
    ["üíé –≠–∫—Å–∫–ª—é–∑–∏–≤", "üè´ O‚Äòquv markaz"],
    ["üè¢ –ë–∏–∑–Ω–µ—Å —Å–∞–π—Ç", "‚úà –¢—É—Ä–∏–∑–º —Å–∞–π—Ç"]
]

async def get_budget(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    budget = update.message.text
    if budget == "üí¨ –°–≤–æ—è —Ü–µ–Ω–∞":
        await update.message.reply_text("‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é —Ü–µ–Ω—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –Ω–∞–ø—Ä–∏–º–µ—Ä, $150")
        return CUSTOM_BUDGET
    else:
        context.user_data['budget'] = budget

        reply_keyboard = [
            ["LANDING PAGE", "SAYT VIZITKA", "ESKLYUZIV"],
            ["OQUV MARKAZ", "BIZNES UCHUN WEB SAYT", "TURISTIK KOMPANIYA UCHUN WEB SAYT"]
        ]
        await update.message.reply_text(
            "üåê –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–∞–π—Ç–∞:",
            reply_markup=ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True)
        )
        return SITE_TYPE

packages = [["üíº –°—Ç–∞–Ω–¥–∞—Ä—Ç", "üíé –ü—Ä–µ–º–∏—É–º"]]

price_ranges = [["üí≤ 100$", "üí≤ 200‚Äì300$"], ["üí≤ 400‚Äì1000$", "üí¨ –°–≤–æ—è —Ü–µ–Ω–∞"]]

init_db()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫–æ–π —Å–∞–π—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ?"
    user_first_name = update.effective_user.first_name
    keyboard = [["üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏"]]

    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user_first_name}!\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à Ali-Company Bot.\n\n"
        "üü¢ –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /start –µ—â—ë —Ä–∞–∑.\n\n"
        "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –æ –Ω–∞—Å...",
        reply_markup=reply_markup
    )

    # –≠–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    await asyncio.sleep(2)

    await update.message.reply_text(
        "‚úÖ –ì–æ—Ç–æ–≤–æ! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /help –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏."
    )

    await update.message.reply_text(
        msg,
        reply_markup=ReplyKeyboardMarkup(site_types, resize_keyboard=True)
    )
    return SITE_TYPE

async def main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    keyboard = [
        [KeyboardButton("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
        [KeyboardButton("üì¶ –û –Ω–∞—Å"), KeyboardButton("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é –Ω–∏–∂–µ.",
        reply_markup=reply_markup
    )
    return START

ABOUT_TEXT = (
    "üè¢ <b>–û –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏</b>\n\n"
    "üîπ –ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∞–π—Ç–æ–≤.\n"
    "üîπ –î–µ–ª–∞–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ, –±—ã—Å—Ç—Ä—ã–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –≤–µ–±-—Ä–µ—à–µ–Ω–∏—è –ø–æ–¥ –∫–ª—é—á.\n"
    "üîπ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω, –ø—Ä–æ—Å—Ç–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å, –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ö–æ—Å—Ç–∏–Ω–≥ –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤.\n"
    "üîπ –†–∞–±–æ—Ç–∞–µ–º —Å –ª—é–±—ã–º–∏ –Ω–∏—à–∞–º–∏: –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –±–∏–∑–Ω–µ—Å, —Ç—É—Ä–∏–∑–º –∏ —Ç.–¥.\n\n"
    "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ ‚Äî –∏ –≤–∞—à —Å–∞–π—Ç –±—É–¥–µ—Ç –ª—É—á—à–∏–º! üíº"
)

async def about_us(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(ABOUT_TEXT, parse_mode="HTML")

async def get_site_type(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["site_type"] = update.message.text
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç:",
        reply_markup=ReplyKeyboardMarkup(packages, resize_keyboard=True)
    )
    return PACKAGE


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ü§ñ –ü–æ–¥—Å–∫–∞–∑–∫–∏:\n\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏ 'üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ—é –∑–∞—è–≤–∫—É\n"
        "2Ô∏è‚É£ –ù–∞–∂–º–∏ '‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏', —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ\n\n"
        "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚Äî –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞."
    )


async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìå –ú—ã —Å–æ–∑–¥–∞—ë–º —Å–∞–π—Ç—ã –ø–æ–¥ –∫–ª—é—á: –æ—Ç –∏–¥–µ–∏ –¥–æ –∑–∞–ø—É—Å–∫–∞!\n"
        "üíª Landing Page, –º–∞–≥–∞–∑–∏–Ω—ã, –≤–∏–∑–∏—Ç–∫–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.\n\n"
        "–ù–∞–ø–∏—à–∏ –Ω–∞–º ‚Äî –ø–æ–º–æ–∂–µ–º –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç!"
    )


async def request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç."
    )

async def get_package(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["package"] = update.message.text
    await update.message.reply_text(
        "–£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Ü–µ–Ω—É:",
        reply_markup=ReplyKeyboardMarkup(price_ranges, resize_keyboard=True)
    )
    return PRICE

async def get_price(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["price"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    return NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["phone"] = update.message.text
    await update.message.reply_text("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è:")
    return COMMENT

async def get_comment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["comment"] = update.message.text
    user = update.effective_user
    username = user.username or "–ù–µ—Ç username"

    save_application(
        context.user_data["name"],
        f"@{username}",
        context.user_data["phone"],
        context.user_data["site_type"],
        context.user_data["package"],
        context.user_data["price"],
        context.user_data["comment"]
    )

    text = (
        "üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\n"
        f"üë§ –ò–º—è: {context.user_data['name']}\n"
        f"üîó Username: @{username}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data['phone']}\n"
        f"üåê –°–∞–π—Ç: {context.user_data['site_type']}\n"
        f"üíº –ü–∞–∫–µ—Ç: {context.user_data['package']}\n"
        f"üí∞ –¶–µ–Ω–∞: {context.user_data['price']}\n"
        f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {context.user_data['comment']}"
    )

    await context.bot.send_message(chat_id=ADMIN_ID, text=text)

    await update.message.reply_text("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç.")
    for item in advantages:
        await update.message.reply_text(item)

    return ConversationHandler.END

async def export_applications(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("‚õî –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
    path = export_to_excel()
    await context.bot.send_document(chat_id=ADMIN_ID, document=open(path, "rb"))

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

TOKEN = os.getenv("BOT_TOKEN")

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("help", help_command))
app.add_handler(MessageHandler(filters.Regex("^(üì¶ –û –Ω–∞—Å)$"), about_us))
app.add_handler(CommandHandler("request", request))

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    conv = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            SITE_TYPE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_site_type)],
            PACKAGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_package)],
            PRICE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_price)],
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
            COMMENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_comment)],
        },
        fallbacks=[CommandHandler("cancel", cancel)]
    )

    app.add_handler(conv)
    app.add_handler(CommandHandler("export", export_applications))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()

if __name__ == "__main__":
    main()
